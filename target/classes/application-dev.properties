# Server Configuration
server.port=${PORT:8080}
spring.application.name=app
spring.main.allow-bean-definition-overriding=true

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=mysql://root:vjwAvgyCCFJCIxngBzUygKiksRnwHsNy@turntable.proxy.rlwy.net:32542/railway
spring.datasource.username=${MYSQL_USERNAME:root}
spring.datasource.password=${MYSQL_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Configuration importante pour corriger l'erreur de JdbcTypeRecommendationException
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=CHAR
spring.jpa.properties.hibernate.id.new_generator_mappings=true

# Configurer explicitement les types de collection
spring.jpa.properties.hibernate.type.collection_element=java.io.Serializable

# Desactiver le lazy loading global pour simplifier le debogage
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Journalisation detaillee pour identifier les problemes
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# = MULTIPART (MultipartProperties)
# ===============================
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=250MB
# Max Request Size
spring.servlet.multipart.max-request-size=100MB